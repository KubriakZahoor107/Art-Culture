import 'dotenv/config';                               // –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î .env
import app from './src/app.js';                       // —Ü–µ–π —à–ª—è—Ö ‚Üí src/app.ts
import prisma from './src/prismaClient.js';           // ‚Üí src/prismaClient.ts
import logger from './src/utils/logging.js';          // ‚Üí src/utils/logging.ts

const PORT = Number(process.env.PORT) || 5000;

async function main(): Promise<void> {
  try {
    await prisma.$connect();
    logger.info('‚úÖ Successfully connected to the database');

    app.listen(PORT, () => {
      logger.info(`üöÄ Server listening on http://localhost:${PORT}`);
    });
  } catch (err) {
    logger.error('üî• FAILED TO START APP:', err);
    process.exit(1);
  }
}

main();

// –≥–ª–æ–±–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –ø—Ä–æ–º—ñ—Å—ñ–≤/–≤–∏–Ω—è—Ç–∫—ñ–≤
process.on('unhandledRejection', (reason) => {
  logger.error('‚ùå Unhandled Rejection:', reason);
});
process.on('uncaughtException', (err) => {
  logger.error('‚ùå Uncaught Exception:', err);
  process.exit(1);
});

